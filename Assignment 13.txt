//1. Write a recursive function to calculate sum of first N natural numbers
#include<stdio.h>
int natural_sum(int n)
{
    if(n==0)
        return;
    return n+natural_sum(n-1);
}
int main()
{
    int n;
    printf("Enter n: ");
    scanf("%d",&n);
    printf("%d",natural_sum(n));
    return 0;
}

//2. Write a recursive function to calculate sum of first N odd natural numbers
#include<stdio.h>
int odd_sum(int n)
{
    if(n==0)
        return;
    return (2*n-1)+odd_sum(n-1);
}
int main()
{
    int n;
    printf("Enter n: ");
    scanf("%d",&n);
    printf("%d",odd_sum(n));
    return 0;
}

//3. Write a recursive function to calculate sum of first N even natural numbers
#include<stdio.h>
int even_sum(int n)
{
    if(n==0)
        return;
    return (2*n)+even_sum(n-1);
}
int main()
{
    int n;
    printf("Enter n: ");
    scanf("%d",&n);
    printf("%d",even_sum(n));
    return 0;
}

//4. Write a recursive function to calculate sum of squares of first N natural numbers
#include<stdio.h>
int sqr_sum(int n)
{
    if(n==0)
        return;
    return (n*n)+sqr_sum(n-1);
}
int main()
{
    int n;
    printf("Enter n: ");
    scanf("%d",&n);
    printf("%d",sqr_sum(n));
    return 0;
}

//5. Write a recursive function to calculate sum of digits of a given number
#include<stdio.h>
int num_digit_sum(int n)
{
    if(n==0)
        return;
    return (n%10)+num_digit_sum(n/10);
}
int main()
{
    int n;
    printf("Enter n: ");
    scanf("%d",&n);
    printf("%d",num_digit_sum(n));
    return 0;
}

//6. Write a recursive function to calculate factorial of a given number
#include<stdio.h>
int factorial(int n)
{
    if(n==1)
        return;
    return n*factorial(n-1);
}
int main()
{
    int n;
    printf("Enter n: ");
    scanf("%d",&n);
    printf("%d",factorial(n));
    return 0;
}

//7. Write a recursive function to calculate HCF of two numbers
#include<stdio.h>
int find_HCF(int x,int y)
{
    if(y==0)
        return x;
    if(x==0)
        return y;
    find_HCF(y,x%y);

}
int main()
{
    int num1,num2,result;
    printf("Enter two numbers: ");
    scanf("%d %d",&num1,&num2);
    if(num1>num2)
        result=find_HCF(num2,num1%num2);
    else
        result=find_HCF(num1,num2%num1);
    printf("%d",result);
    return 0;
}

//8. Write a recursive function to print first N terms of Fibonacci series
#include<stdio.h>
int print_fibonacci(int n)
{
  if(n==0||n==1)
    return n;
  return print_fibonacci(n-1)+print_fibonacci(n-2);
}
int main()
{
    int n;
    printf("Enter a number: ");
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    printf("%d ",print_fibonacci(i));
    return 0;
}

//9. Write a program in C to count the digits of a given number using recursion.
#include<stdio.h>
int count=0;
int count_digit(int n)
{
  if(n==0)
    return 1;
  if(n>0||n<0)
  {
    count++;
    count_digit(n/10);
    return count;
  }
 
}
int main()
{
    int n;
    printf("Enter a number: ");
    scanf("%d",&n);
   printf("%d",count_digit(n));
    return 0;
}

//10. Write a program in C to calculate the power of any number using recursion
#include<stdio.h>
int find_power(int a,int b )
{
    if(a==1||b==0)
        return 1;
    return a*find_power(a,b-1);
}
int main()
{
    int a,b;
    printf("Enter number and power: ");
    scanf("%d%d",&a,&b);
   printf("%d",find_power(a,b));
    return 0;
}
