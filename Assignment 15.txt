/*
1. Write a function to find the greatest number from the given array of any size. (TSRS)
*/
#include<stdio.h>
int find_greatest(int b[],int n)
{
    int max=0;
    printf("Enter the 10 elements of array \n");
    for(int i=0;i<n;i++)
    {
        scanf("%d",&b[i]);
        if(b[i]>max)
            max=b[i];
    }
    return max;
}
int main()
{
    int a[10];
    printf("Greatest number in the array is %d",find_greatest(a,10));
        return 0;
}


/*
2. Write a function to find the smallest number from the given array of any size. (TSRS)
*/
#include<stdio.h>
int find_smallest(int b[],int n)
{
    int min=99999;
    printf("Enter the 10 elements of array \n");
    for(int i=0;i<n;i++)
    {scanf("%d",&b[i]);
        if(b[i]<min)
        min=b[i];}
    return min;
}
int main()
{
    int a[10];
    printf("Smallest number in the array is %d",find_smallest(a,10));
        return 0;
}


/*
3. Write a function to sort an array of any size. (TSRN)
*/
#include<stdio.h>
void sort_element(int b[],int n)
{
    int i,j,temp=0;
    printf("Enter the %d elements of array \n",n);
    for(i=0;i<n;i++)
    scanf("%d",&b[i]);
    for(i=0;i<n-1;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(b[i]>b[j])
            {
                temp=b[i];
                b[i]=b[j];
                b[j]=temp;
            }
        }
    }
    printf("After sorting the elements: ");
    for(i=0;i<n;i++)
        printf("%d ",b[i]);

}
int main()
{
    int a[10];
    sort_element(a,10);
        return 0;
}

/*
4. Write a function to rotate an array by n position in d direction. The d is an indicative
value for left or right. (For example, if array of size 5 is [32, 29, 40, 12, 70]; n is 2 and
d is left, then the resulting array after left rotation 2 times is [40, 12, 70, 32, 29] )
*/
#include<stdio.h>
#define RIGHT 1
#define LEFT 0
void rotate(int a[],int size,int d,int n)
{
    int temp,i,j;
    if(d==LEFT)
    {
        while(n)
        {
            temp=a[0];
            for(i=0;i<size-1;i++)
                a[i]=a[i+1];
             a[size-1]=temp;
             n--;
        }
    }
    else
    {
       while(n)
       {
           temp=a[size-1];
           for(i=size-1;i>=1;i--)
            a[i]=a[i-1];
           a[0]=temp;
           n--;
       }
    }
}
void display_array(int a[],int size)
{
    for(int i=0;i<size;i++)
        printf("%d ",a[i]);

}
int main()
{
    int A[]={32,29,40,12,70};
    printf("Before Rotation: ");
    display_array(A,5);
    rotate(A,5,LEFT,2);
    printf("\nAfter left rotation: ");
    display_array(A,5);
    rotate(A,5,RIGHT,2);
    printf("\nAfter right rotation: ");
    display_array(A,5);
  return 0;
}

/*
5. Write a function to find the first occurrence of adjacent duplicate values in the array.
Function has to return the value of the element.
*/
#include<stdio.h>
int find_adjacent_duplicant(int a[],int n)
{
    for(int i=0;i<n;i++)
    {
        if(a[i]==a[i+1])
         return a[i];
    }
}
int main()
{
    int A[]={2,3,5,6,6,7,7,8};
    printf("The first occurrence of adjacent duplicate is %d",find_adjacent_duplicant(A,8));
    return 0;
}

/*
6. Write a function in C to read n number of values in an array and display it in reverse
order.
*/
#include<stdio.h>
void read_and_display_reverse(int n)
{
  int A[n],i;
  printf("Enter the %d elements in the array\n",n);
  for(i=0;i<n;i++)
      scanf("%d",&A[i]);
      printf("The array in reverse order is: ");
  for(i=n-1;i>=0;i--)
    printf("%d ",A[i]);
}
int main()
{
    int n;
    printf("Enter the value of n: ");
    scanf("%d",&n);
    read_and_display_reverse(n);
    return 0;
}

/*
7. Write a function in C to count a total number of duplicate elements in an array.
*/
#include<stdio.h>
int count_duplicant(int a[],int n)
{
    int count=0,i,j;
    for(int i=0;i<n-1;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]==a[j])
                count++;
        }
    }
    return count;
}
int main()
{
    int A[]={2,3,5,6,3,7,8,10,7,2};
    printf("Total number of duplicate elements in array is %d",count_duplicant(A,10));
    return 0;
}

/*
8. Write a function in C to print all unique elements in an array
*/
#include<stdio.h>
void print_unique(int a[],int N)
{
    int i,j;
    printf("Unique Elements in the array is: ");
    for(i=0;i<N;i++)
    {
        for(j=0;j<N;j++)
        {
            if((a[i]==a[j])&&i!=j)
                break;
        }
        if(j==N)
            printf("%d ",a[i]);
    }
}
int main()
{
    int i,size;
    printf("Enter the size of array: ");
    scanf("%d",&size);
    int a[size];
    printf("Enter the elements of array: \n");
    for(i=0;i<size;i++)
        scanf("%d",&a[i]);
    printf("Array elements with duplicates: ");
    for(i=0;i<size;i++)
        printf("%d ",a[i]);
    printf("\n");
    print_unique(a,size);
    return 0;
}

----------------or----------------------------

#include<stdio.h>
void print_unique(int a[],int N)
{
    int i,j,flag;
    printf("Unique Elements in the array is: ");
    for(i=0;i<N;i++)
    {
        flag=0;
        for(j=i+1;j<N;j++)
        {
               if(a[i]==a[j])
               {
                   flag=1;
                   a[j]=NULL;
               }
        }
        if(flag==0 && a[i]!=0)
            printf("%d ",a[i]);
    }
}
int main()
{
    int i,size;
    printf("Enter the size of array: ");
    scanf("%d",&size);
    int a[size];
    printf("Enter the elements of array: \n");
    for(i=0;i<size;i++)
        scanf("%d",&a[i]);
    printf("Array elements with duplicates: ");
    for(i=0;i<size;i++)
        printf("%d ",a[i]);
    printf("\n");
    print_unique(a,size);
    return 0;
}

----------------or--------------------

#include<stdio.h>
void print_unique(int a[],int N)
{
    int i,j,k,flag;
    printf("Unique Elements in the array is: ");
    for(i=0;i<N;i++)
    {
        flag=0;
        for(j=0,k=N;j<k+1;j++)
        {
             if(i!=j)
             {
                if(a[i]==a[j])
                   flag=1;
             }

        }
        if(flag==0)
            printf("%d ",a[i]);
    }
}
int main()
{
    int i,size;
    printf("Enter the size of array: ");
    scanf("%d",&size);
    int a[size];
    printf("Enter the elements of array: \n");
    for(i=0;i<size;i++)
        scanf("%d",&a[i]);
    printf("Array elements with duplicates: ");
    for(i=0;i<size;i++)
        printf("%d ",a[i]);
    printf("\n");
    print_unique(a,size);
    return 0;
}


/*
9. Write a function in C to merge two arrays of the same size sorted in descending
order.
*/
#include<stdio.h>
void merge_sort_descending_order(int a[],int M, int b[],int N)
{
    int p,k,i=0,j=0;
    p=M+N;
    int c[p];
    for(k=0;k<p;k++)
    {
        if(j>=N)
        {
            while(k<p)
            {
                c[k]=a[i];
                i++;
                k++;
                if(k==p)
                    break;
            }
        }
        if(i>=M)
        {
            while(k<p)
            {
                c[k]=b[j];
                j++;
                k++;
                if(k==p)
                    break;
            }
        }

       else if(a[i]<b[j])
        {
           c[k]=a[i];
           i++;
        }
        else
        {
          c[k]=b[j];
          j++;
        }

    }
    printf("Elements after merging both array in descending order: ");
    for(k=p-1;k>=0;k--)
    {
        printf("%d ",c[k]);
    }
}
int main()
{
    int m,n,i;
    printf("Enter the number of elements in array 1: ");
    scanf("%d",&m);
    int a[m];
     printf("Enter the sorted elements of array 1: \n");
    for(i=0;i<m;i++)
        scanf("%d",&a[i]);
    printf("Enter the number of elements in array 2: ");
    scanf("%d",&n);
    int b[n];
     printf("Enter the sorted elements of array 2: \n");
    for(i=0;i<n;i++)
        scanf("%d",&b[i]);
    merge_sort_descending_order(a,m,b,n);
    return 0;
}

/*
10. Write a function in C to count the frequency of each element of an array
*/
#include<stdio.h>
void count_frequency(int a[],int n,int b[],int k)
{
    int i,j;
    for(i=0;i<=k;i++)
    {
        for(j=0;j<n;j++)
        {
            if(a[j]==i)
            {
                b[i]++;
            }
        }
    }
    for(i=0;i<=k;i++)
    {
        if(b[i]!=0)
            printf("frequency of %d is %d\n",i,b[i]);
    }
}
int main()
{
    int n,max=-99999,i,k;
    printf("Enter the no. of you want to insert :");
    scanf("%d",&n);
    int a[n];
    printf("Enter the elements of array\n");
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    printf("Elements entered are: ");
    for(i=0;i<n;i++)
    printf("%d ",a[i]);
    for(i=0;i<n;i++)
    {
        if(a[i]>max)
            max=a[i];
    }
    k=max;
    printf("\n");
   int b[k];
   for(i=0;i<=k;i++)
    b[i]=0;
   count_frequency(a,n,b,k);
    return 0;
}

